I"<p>Breen Peter, SOFTWARE CRAFTSMANSHIP????</p>

<p>Pine Chris - Learn to Program</p>

<p>Shaw, Zed - Learn Unix The Hard Way</p>

<p>Shaw, Zed - Learn Ruby The Hard Way</p>

<p>Well Grounded Rubyist</p>

<p>Duckett John, HTML &amp; CSS</p>

<p>Richardson and Amundsen, RESTful Web APIs</p>

<p>[Thomas] Dave Thomas and Andy Hunt. The Pragmatic Programmer: From Journeyman to Master. Addison-Wesley. 1999.</p>

<p>Cohn Mike, User Stories Applied</p>

<p>McMillan Michael, Data Structures and Algorithms with Javascript</p>

<p>Osmani Addy, Learning JavaScript Design Patterns</p>

<p>[Weinberg3] Gerald M Weinberg. The Psychology of Computer Programming: Silver Anniversary Edition. Dorset House Publishing. 1998.</p>

<p>Metz Sandi, Practical Object Oriented Design in Ruby</p>

<p>Martin, Robert Clean Code</p>

<p>[Beck] Kent Beck. Extreme Programming Explained: Embrace Change. Addison-Wesley. 2004.</p>

<p>Martin, Robert Clean Coder</p>

<p>Martin, Robert PPP</p>

<p>[Beck2] Kent Beck. Test-Driven Development: By Example. Addison-Wesley. 2000.</p>

<p>Haines Corey, The Four Rules of Simple Design</p>

<p>Czaplicki Evan, An Introduction to Elm</p>

<p>Shotts William E, JR, The Linux Command Line</p>

<p>Chandra Vikram, Geek Sublime</p>

<p>Starett Kelly, Deskbound</p>

<p>Emotional Intelligence</p>

<p>Patrick Lencioni, Getting Naked</p>

<p>Roam Dan, Back of the Napkin</p>

<p>Instant Networking</p>

<p>Godin Seth, The Icarus Deception</p>

<p>Hoover Adewale Apprenticeship Patterns</p>

<h1 id="unread">Unread</h1>

<p>[Alexander] Christopher Alexander. The Timeless Way of Building. Oxford University Press. 1979.</p>

<p>[Alexander2] Christopher Alexander, Sara Ishikawa, and Murray Silverstein. A Pattern Language: Towns, Buildings, Construction. Oxford University Press. 1977.</p>

<p>[Armour] Phillip G Armour. The Five Orders of Ignorance. Communications of the ACM. 43. 10. October 2000.</p>

<p>[Becker] Howard S Becker. A School Is a Lousy Place to Learn Anything In. American Behavioral Scientist. 11. 1. September/October 1972.</p>

<p>[Bentley] Jon Bentley. Programming Pearls. Addison-Wesley. 1999.</p>

<p>[Bentley2] Jon Bentley. More Programming Pearls: Confessions of a Coder. Addison-Wesley. 1998.</p>

<p>[Brooks] Frederick P Brooks. The Mythical Man Month: Essays on Software Engineering. Second. Addison-Wesley. 1995.</p>

<p>[Brown] H. Jackson Brown, Jr.. Life’s Little Instruction Book. Thomas Nelson. 2000.</p>

<p>[Coplien] James Coplien and Neil Harrison. Organizational Patterns of Agile Software Development. Prentice Hall. 2004.</p>

<p>[Constantine] Larry Constantine. The Peopleware Papers: Notes on the Human Side of Software. Prentice Hall. 2001.</p>

<p>[DeMarco] Tom DeMarco and Timothy Lister. Peopleware: Productive Projects and Teams. Dorset House Publishing. 1999.</p>

<p>[Dweck] Carol S Dweck. Mindset: The New Psychology of Success. Ballantine Books. 2007.</p>

<p>[Dweck2] Carol S Dweck. Self-theories: Their Role in Motivation, Personality, and Development. Psychology Press. 2000.</p>

<p>[Ericsson] K. Anders Ericsson, Ralf Th. Krampe, and Clemens Tesch-Romer. The Role of Deliberate Practice in the Acquisition of Expert Performance. Psychological Review. 100. 3. 1993.</p>

<p>[Farleigh] John Farleigh. Fifteen Craftsmen on Their Crafts. The Sylvan Press. 1945.</p>

<p>[Fowler] Martin Fowler, Kent Beck, John Brant, William Opdyke, and Don Roberts. Refactoring: Improving the Design of Existing Code. Addison-Wesley. 1999.</p>

<p>[Gamma] Erich Gamma, Richard Helm, Ralph Johnson, and John M. Vlissides. Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley. 1994.</p>

<p>[Gawande] Atul Gawande. Better: A Surgeon’s Notes on Performance. Metropolitan Books. 2007.</p>

<p>[Graham] Paul Graham. Hackers &amp; Painters: Big Ideas from the Computer Age. O’Reilly Media. 2004.</p>

<p>[Highsmith] Jim Highsmith. Agile Software Development Ecosystems. Addison-Wesley. 2002.</p>

<p>[Hoffer] Eric Hoffer. Reflections on the Human Condition. Hopewell Publications. 2006.</p>

<p>[Hunt] Andy Hunt. Pragmatic Thinking and Learning: Refactor Your Wetware. Pragmatic Bookshelf. 2008.</p>

<p>[Jeffries] Ron Jeffries, Ann Anderson, and Chet Hendrickson. Extreme Programming Installed. Addison-Wesley. 2000.</p>

<p>[Kerievsky] Joshua Kerievsky. Refactoring to Patterns. Addison-Wesley. 2004.</p>

<p>[Kerth] Norman L Kerth. Project Retrospectives: A Handbook for Team Reviews. Dorset House Publishing. 2001.</p>

<p>[Knuth] Donald Knuth. Computer Programming as an Art. Communications of the ACM. 17. 12. 1974.</p>

<p>[Kruger] Justin Kruger and David Dunning. Unskilled and Unaware of It: How Difficulties in Recognizing One’s Own Incompetence Lead to Inflated Self-Assessments. Journal of Personality and Social Psychology. 77. 6. 1999.</p>

<p>[Lammers] Susan Lammers. Programmers at Work: Interviews With 19 Programmers Who Shaped the Computer Industry. Tempus Books. 1989.</p>

<p>[Lave] Jean Lave and Etienne Wenger. Situated Learning: Legitimate Peripheral Participation. Cambridge University Press. 1991.</p>

<p>[Leonard] George Leonard. Mastery: The Keys to Success and Long-Term Fulfillment. Plume. 1992.</p>

<p>[Lewis] C. S Lewis. The Weight of Glory and Other Addresses. HarperOne. 2001.</p>

<p>[McBreen] Pete McBreen. Software Craftsmanship: The New Imperative. Addison-Wesley. 2001.</p>

<p>[McConnell] Steve McConnell. Code Complete: A Practical Handbook of Software Construction. Second. Microsoft Press. 2004.</p>

<p>[Meyer] Bertrand Meyer. Object-Oriented Software Construction. Second. Prentice Hall. 2000.</p>

<p>[Peter] Laurence J Peter, Raymond Hull, and Robert I Sutton. The Peter Principle: Why Things Always Go Wrong. HarperBusiness. 2009.</p>

<p>[Pirsig] Robert Pirsig. Zen and the Art of Motorcycle Maintenance: An Inquiry into Values. Harper Perennial Modern Classics. 2008.</p>

<p>[Postrel] Virginia Postrel. The Future and Its Enemies: The Growing Conflict over Creativity, Enterprise and Progress. Free Press. 1999.</p>

<p>[Rogers] Carl Rogers and Peter D Kramer. On Becoming a Person: A Therapist’s View of Psychotherapy. Mariner Books. 1995.</p>

<p>[Sennet] Richard Sennet. The Craftsman. Yale University Press. 2009.</p>

<p>[Skiena] Steven S Skiena. The Algorithm Design Manual. Springer. 2008.</p>

<p>[Sudo] Philip Sudo. Zen Guitar. Simon &amp; Schuster. 1998.</p>

<p>[Surowiecki] James Surowiecki. The Wisdom of Crowds. Anchor. 2005.</p>

<p>[Suzuki] Shunryu Suzuki. Zen Mind, Beginner’s Mind. Shambhala. 2006.</p>

<p>[Tharp] Twyla Tharp and Mark Reiter. The Creative Habit: Learn It and Use It for Life. Simon &amp; Schuster. 2005.</p>

<p>[Tractate] Tractate Avot (f). http://www.jewishvirtuallibrary.org/jsource/Talmud/avot4.html.</p>

<p>[Vlissides] John M Vlissides. Pattern Hatching: Design Patterns Applied. Addison-Wesley. 1998.</p>

<p>[Wall] Larry Wall, Tom Christiansen, and Jon Orwant. Programming Perl. Third. O’Reilly Media. 2000.</p>

<p>[Weick] Karl E Weick and Karlene H. Roberts. Collective Mind in Organizations: Heedful Interrelating on Flight Decks. Administrative Science Quarterly. 38. 3. 1993.</p>

<p>[Weinberg] Gerald M Weinberg. Becoming a Technical Leader: An Organic Problem-Solving Approach. Dorset House Publishing. 1986.</p>

<p>[Weinberg2] Gerald M Weinberg. More Secrets of Consulting: The Consultant’s Tool Kit. Dorset House Publishing. 2001.</p>

<p>[Wetherell] Charles Wetherell. Etudes for Programmers. Prentice Hall. 1978.</p>

<p>[Williams] Laurie Williams. Pair Programming Illuminated. Addison-Wesley. 2002.</p>

<p>[Whitehead] Alfred North Whitehead. An Introduction to Mathematics. BiblioLife. 2009.</p>
:ET